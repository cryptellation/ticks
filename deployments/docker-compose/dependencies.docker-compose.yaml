services:
  postgresql:
    image: postgres:17.4-alpine
    restart: always
    shm_size: 128mb
    ports:
      - 5432:5432
    expose:
      - 5432
    volumes:
      - ./postgresql:/docker-entrypoint-initdb.d/
    environment:
      POSTGRES_PASSWORD: cryptellation_ticks
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cryptellation-ticks

  temporal:
    depends_on:
      postgresql:
        condition: service_healthy
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    image: temporalio/auto-setup:1.25
    ports:
      - 7233:7233
    expose:
      - 7233
    volumes:
      - ./temporal:/etc/temporal/config/dynamicconfig
    healthcheck:
      test:
        ["CMD","tctl", "--address", "temporal:7233", "workflow", "list", "||", "exit 1"]
      interval: 1s
      timeout: 5s
      retries: 30
    networks:
      - cryptellation-ticks
  temporal-ui:
    depends_on:
      temporal:
        condition: service_healthy
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:2.31.2
    ports:
      - 8080:8080
    expose:
      - 8080
    networks:
      - cryptellation-ticks

  exchanges-migrator:
    depends_on:
      postgresql:
        condition: service_healthy
    image: ghcr.io/cryptellation/exchanges
    command: ["worker", "database", "migrate"]
    environment:
      SQL_DSN: "host=postgresql user=cryptellation_exchanges password=cryptellation_exchanges dbname=cryptellation_exchanges sslmode=disable"
    networks:
      - cryptellation-ticks
  exchanges-worker:
    image: ghcr.io/cryptellation/exchanges
    depends_on:
      temporal:
        condition: service_healthy
      postgresql:
        condition: service_healthy
    environment:
      SQL_DSN: "host=postgresql user=cryptellation_exchanges password=cryptellation_exchanges dbname=cryptellation_exchanges sslmode=disable"
      TEMPORAL_ADDRESS: temporal:7233
    env_file:
      - path: ../../.credentials.env
        required: true
    command: ["worker", "serve"]
    networks:
      - cryptellation-ticks

  migrator:
    depends_on:
      postgresql:
        condition: service_healthy
    image: golang:1.23.8-alpine
    command: ["go", "run", "./cmd/worker", "database", "migrate"]
    working_dir: /go/src/github.com/cryptellation/ticks
    environment:
      SQL_DSN: "host=postgresql user=cryptellation_ticks password=cryptellation_ticks dbname=cryptellation_ticks sslmode=disable"
    volumes:
      - gocache:/go/pkg/mod
      - gobuild:/root/.cache/go-build
      - ../..:/go/src/github.com/cryptellation/ticks
    networks:
      - cryptellation-ticks

volumes:
  gocache:
  gobuild:

networks:
  cryptellation-ticks:
